# "Необходимо создать гистограмму встречаемости символов в зашифрованном тексте, исключая пробелы и переводы строк. Каждому символу соответствует столбик, 
# высота которого зависит от количества данного символа в тексте. Гистограмма должна быть отформатирована таким образом, 
# чтобы нижние концы столбиков были на одной строке, первая строка и первый столбец были непустыми. 
# Столбики должны быть отсортированы в порядке увеличения кодов символов. 
# Входные данные - зашифрованный текст сообщения, содержащий строчные и прописные латинские буквы, цифры, знаки препинания, пробелы и переводы строк. 
# Текст не длиннее 200 символов и содержит хотя бы один непробельный символ.
# Ввод 
# Hello, world! 
# Вывод
#            #
#            ##
# #########
# !,Hdelorw"


# Чтение данных из файла, удаление пробелов и переводов строк
try:
    file = open('input.txt', 'r', encoding='utf-8')
    text = file.read().replace(" ", "").replace("\n", "")
    file.close()
except FileNotFoundError:
    print("Файл не найден. Проверьте путь к файлу.")
    text = "Hello, world!"  # Для тестирования

# Подсчет частот каждого символа с помощью словаря
frequency = {}
for char in text:
    if char in frequency:
        frequency[char] += 1
    else:
        frequency[char] = 1

# Словарь в сортированный список кортежей сортированных по ключу (букве) по их ASCII-коду
sorted_symbols = sorted(frequency.keys())

# Создание гистограммы
max_count = max(frequency.values()) #высота максимального столбца гистограммы
histogram = []
for level in range(max_count, 0, -1):
    row = ''.join('#' if frequency[symbol] >= level else ' ' for symbol in sorted_symbols)
    histogram.append(row)

# Вывод гистограммы построчно
for row in histogram:
    print(row)
# Вывод строки с символами внизу гистограммы
print(''.join(sorted_symbols))
